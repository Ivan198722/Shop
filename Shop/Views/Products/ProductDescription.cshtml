<style>
    .carousel-control-prev-icon,
    .carousel-control-next-icon {
        background-color: lightgray; 
       
    }

    td{
        border:none;
        background-color:transparent;
        font-style: italic;
        padding: 5px;
    }
    
  
    h4{
        font-weight:bold;
    }

    h2 {
        font-weight: bold;
    }
   /*  h6{
        font-weight:bold;
    } */
</style>



@foreach (var wholeProduct in Model.ProductInfos)
{
    @foreach (var product in wholeProduct.products)
    {
        <div class="d-flex justify-content-between m-3">
            <h2> @product.name</h2>
            <h2> @product.price -zł</h2>
        </div>
   <div class="container">
    <div class="row">
      
        <div class="col-lg-4">
            <div id="myCarousel" class="carousel slide mb-6"  data-bs-theme="light">
                <div class="carousel-inner">
                    
                    
                        @if (wholeProduct.images.Count > 1)
                        {
                            foreach (var image in wholeProduct.images)
                            {
                                <div class="carousel-item @(Model.ProductInfos.IndexOf(wholeProduct) == 0 && wholeProduct.images.IndexOf(image) == 0 ? "active" : "")">
                                    <img src="data:image;base64,@Convert.ToBase64String(image.img)" alt="@product.name" class="d-block w-100" />
                                    <div class="container">
                                       @*  <div class="carousel-caption text-start">
                                            <p>@product.name</p>
                                        </div> *@
                                    </div>
                                </div>
                                <button class="carousel-control-prev" type="button" data-bs-target="#myCarousel" data-bs-slide="prev">
                                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                    <span class="visually-hidden">Previous</span>
                                </button>
                                <button class="carousel-control-next" type="button" data-bs-target="#myCarousel" data-bs-slide="next">
                                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                    <span class="visually-hidden" >Next</span>
                                </button>
                            }
                        }
                        else if (wholeProduct.images.Count == 1)
                       
                        {
                            foreach (var image in wholeProduct.images)
                            {
                                <div class="carousel-item @(Model.ProductInfos.IndexOf(wholeProduct) == 0 && wholeProduct.images.IndexOf(image) == 0 ? "active" : "")">
                                    <img src="data:image;base64,@Convert.ToBase64String(image.img)" alt="@product.name" class="d-block w-100" />
                                    <div class="container">
                                        <div class="carousel-caption text-start">
                                           
                                        </div>
                                    </div>
                                </div>
                              
                            }
                        } 
                        else
                        {
                            <div class="carousel-item active">
                                <img src="\img\depositphotos_212631884-stock-photo-forbidden-camera-icon.jpg" alt="@product.name" class="img-thumbnail" />
                                <div class="container">
                                    <div class="carousel-caption text-start">
                                        <p> @product.name</p>
                                    </div>
                                </div>
                            </div>
                        }

                    }
                                        
                    
                </div>

                        

            </div>
        </div>

                <div class="col-lg-4 d-flex flex-column justify-content-center align-items-center">


                    @if (product.quantity >= 1 && product.available==true)
                    {
                        <span >dostępne @product.quantity sztuk  </span>
                        <form asp-controller="ShopCart" asp-action="addToCart" method="post">
                            <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
                            <input type="hidden" name="productId" value="@product.Id" />
                            

                            
                            <button type="submit" class="btn btn-primary">DODAJ DO KOSZYKA</button>
                        </form>
                        
                    }

                    else
                    {
                        <p4 style="color:red;">niedostępny</p4>
                    }
                    <h4></h4>

                </div>
              
        </div>
        </div>

        <div class="mt-2"></div>
        <div class="d-flex justify-content-center">
            <div class="col-lg-9">
                <p6 style="font-style:italic;">@Html.Raw(product.shortDescription)</p6>



            </div>
        </div>
        <div class="mt-2"></div>

        <div class="d-flex justify-content-center">
            <div class="col-lg-4 ">
            <table>
                <tbody>
                  
                        @{
                            string currentPropertyName = null;
                            List<string> parametersList = new List<string>();

                            foreach (var property in wholeProduct.productProperties)
                            {
                                // Проверка на изменение имени свойства
                                if (currentPropertyName == null || currentPropertyName != property.propertyName)
                                {
                                    // Если имя свойства изменилось, выводим предыдущую строку с параметрами (если они есть)
                                    if (currentPropertyName != null)
                                    {
                                        <tr>
                                            <td>@currentPropertyName</td>
                                            <td>@string.Join("; ", parametersList)</td>
                                        </tr>
                                    }

                                    // Обновляем текущее имя свойства и очищаем список параметров
                                    currentPropertyName = property.propertyName;
                                    parametersList.Clear();
                                }

                                // Добавляем параметр в список
                                parametersList.Add(property.propertyParameters);
                            }

                            // Выводим последнюю строку после завершения цикла
                            if (currentPropertyName != null)
                            {
                                <tr>
                                    <td>@currentPropertyName</td>
                                    <td>@string.Join("; ", parametersList)</td>
                                </tr>
                            }
                        }
                </tbody>
            </table>


        </div>
    </div>

    <div class="mt-2"></div>

    <div class="d-flex justify-content-center">
        <div class="col-lg-4 ">
            <h5 style="font-weight:bold; font-style:italic;">Cechy </h5>
            <table>
                <tbody>
                    @foreach (var highlights in wholeProduct.highlights)
                    {
                        <tr>
                            <td>
                                @highlights.name
                            </td>
                            
                        </tr>
                    }
                </tbody>
            </table>


        </div>
    </div>

        <div class="mt-2"></div>
    <div class="d-flex justify-content-center">
        <div class="col-lg-9">
            <h5>Opis produktu</h5>
                <p6 style="font-style:italic;">@Html.Raw( product.longDescription)</p6>
           


        </div>
    </div>
  }
}
